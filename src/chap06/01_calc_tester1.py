import my_package.calculator #지금 현재 calculator.py는 모듈의 위치가 지금 현재 파일과 다름 => 패키지이름.모듈이름의 명령을 통해 위치정보를 알려주도록 한다.

print(my_package.calculator.plus(10, 5)) #위치가 다르면 모듈의 함수를 다이렉트로 호출 불가능.
print(my_package.calculator.minus(10, 5))
print(my_package.calculator.multiply(10, 5))
print(my_package.calculator.divide(10, 5))

#모듈과 패키지 => 파이썬으로 작업한다고 할 때 필수적인 내용
#모듈: 소스코드파일을 파이썬에서는 모듈이라고 부른다. (자바는 .java파일을 코드(소스)파일_자바스크립트도 동일 / R에서는 .r을 스크립트파일이라고 불렀음 )
#     파이썬에서 제공해주는 기능들이 모듈에 정의되어져 있음. 모듈에 유사한 기능들이 하나의 파일안에 작업되다 보면 사이즈가 너무 길어지고, 관리가 어려워짐
#     여러 개의 파일들로 유사기능으로 묶어서 관리를 하게 될 것임. 그러한 유사기능(모듈)들의 묶음을 패키지라고 불러주고 있다.

#모듈은 파이썬에서 세 가지로 분류할 수 있음. 파이썬이 제공해주는 소스파일 - (1)표준모듈 / 사용자가 정의하는 소스파일 - (2)사용자 생성 모듈 /
#프로젝트의 범위가 커지다보면 일정을 맞추기 어렵다면 외부업체와 협업을 해서 같이 진행을 수행하게 될 수 있는데 이때, 협업하는 업체를 3'th 파티 업체라고 함
#이때, 3'th 파티 업체가 협업을 위해 개발하는 소스 파일이나 이미 개발하여 팔고 있는 소스 파일을 (3)3'th 파티 모듈이라고 함
#이 모듈을 어떻게 사용하면 되는지를 chap06에서 살펴볼 예정

#패키지로 만든 폴더라는 것을 구분할 수 있게 하기 위해서 폴더를 만들었을 때 __init__파일을 파이썬이 생성해준 것이다.
#패키지인지 폴더인지를 구분하기 위함이다!! 3'th 파티도 패키지 형태로 파일들을 줄 것임.




