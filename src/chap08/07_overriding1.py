#오버라이딩은 상속에 조건하에서 부모에 정의되어져 있는 메소드에 이름과 완전히 동일한 이름은 물론이고,
#입력에 전달하는 매개변수의 정의까지도 동일하게 자식 클래스에다가 메소드를 정의해주고 있는 개념
#이러한 문법을 제공하는 이유: 상속을 할 때 부모에 정의된 모든 요소들을 자식에서 그대로 사용할 수 있게끔 구조를 가져가겠다는 것이 근본취지인데
#기존에 부모클래스에서 제공해주고 있는 기능 중에 업그레이드 되어진 기능들이 있을 것임. 자식이 그 업그레이된 기능 하나만 바꿔주도록 함!!

class A:
    def method(self):
        print("A")

class B(A):
    def method(self):
        print("B")

class C(A):
    def method(self):
        print("C")


if __name__ == '__main__':
    #자바보다는 명료하게 받아들일 수 있음. -> 생성된 메소드가 호출되기 때문 (자바에서는 자료형을 명시했어서 헷갈렸음)
    #이렇게 코드를 작성하게 되면 문제점 발생: B를 통해서 A에 정의된 메소드를 호출하고 싶으면 어떻게 해야할까? 08_overriding2보기
    a = A()
    a.method() # A

    b = B()
    b.method() # B
    
    c = C()
    c.method() # C
    
    